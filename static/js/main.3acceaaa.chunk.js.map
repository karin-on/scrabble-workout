{"version":3,"sources":["components/Header/Header.scss","components/Game/Game.scss","components/Header/Header.js","components/Home/Home.js","components/Game/Slots/Slots.js","components/Game/Letters/Letters.js","components/Game/Game.js","App.js","serviceWorker.js","index.js","components/Game/Letters/Letters.scss","components/Game/Slots/Slots.scss","components/Home/Home.scss"],"names":["module","exports","Header","className","classes","Home","Hero","StartGame","to","StartGameAction","Slots","Slot","Letters","letterClasses","classNames","Letter","Inactive","LettersRow","Game","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,OAAS,0B,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,sB,6KCEnBC,EAAS,kBACX,4BAAQC,UAAWC,IAAQF,QAA3B,sB,gBCCEG,EAAO,kBACT,0BAAMF,UAAWC,IAAQC,MACrB,6BAASF,UAAWC,IAAQE,MACxB,wBAAIH,UAAWC,IAAQF,QAAvB,gBAEJ,6BAASC,UAAWC,IAAQG,WACxB,kBAAC,IAAD,CAAMC,GAAG,QAAQL,UAAWC,IAAQK,iBAApC,a,iCCRNC,EAAQ,kBACV,6BAASP,UAAWC,IAAQM,OACxB,yBAAKP,UAAWC,IAAQO,MAAxB,KACA,yBAAKR,UAAWC,IAAQO,MAAxB,KACA,yBAAKR,UAAWC,IAAQO,MAAxB,KACA,yBAAKR,UAAWC,IAAQO,OACxB,yBAAKR,UAAWC,IAAQO,OACxB,yBAAKR,UAAWC,IAAQO,OACxB,yBAAKR,UAAWC,IAAQO,S,iCCP1BC,EAAU,WACZ,IAAMC,EAAgBC,IAClBV,IAAQW,OACRX,IAAQY,UAGZ,OACI,6BAASb,UAAWC,IAAQQ,SACxB,yBAAKT,UAAWC,IAAQa,YACpB,yBAAKd,UAAWU,GAAhB,KACA,yBAAKV,UAAWC,IAAQW,QAAxB,MAEJ,yBAAKZ,UAAWC,IAAQa,YACpB,yBAAKd,UAAWU,GAAhB,KACA,yBAAKV,UAAWC,IAAQW,QAAxB,KACA,yBAAKZ,UAAWC,IAAQW,QAAxB,MAEJ,yBAAKZ,UAAWC,IAAQa,YACpB,yBAAKd,UAAWU,GAAhB,KACA,yBAAKV,UAAWC,IAAQW,QAAxB,QCjBVG,EAAO,kBACT,0BAAMf,UAAWC,IAAQc,MACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCYOC,MAbf,WACI,OACI,kBAAC,IAAD,CAAeC,SAAS,qBACpB,6BACI,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjC,kBAAC,IAAD,CAAOiB,KAAK,QAAQC,UAAWL,OCH3BM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,kBElInBtC,EAAOC,QAAU,CAAC,QAAU,0BAA0B,WAAa,6BAA6B,OAAS,yBAAyB,SAAW,6B,kBCA7ID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,uB,kBCAvDD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,OAAS,sBAAsB,UAAY,yBAAyB,gBAAkB,kC","file":"static/js/main.3acceaaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__1_1R8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game__Game__xvUCX\"};","import React from 'react';\nimport classes from './Header.scss';\n\nconst Header = () => (\n    <header className={classes.Header}>\n        Scrabble Workout!\n    </header>\n);\n\nexport { Header };\n","import React from 'react';\nimport classes from './Home.scss';\n\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => (\n    <main className={classes.Home}>\n        <section className={classes.Hero}>\n            <h2 className={classes.Header}>Home Screen</h2>\n        </section>\n        <section className={classes.StartGame}>\n            <Link to=\"/game\" className={classes.StartGameAction}>\n                Zagraj\n            </Link>\n        </section>\n    </main>\n);\n\nexport { Home };\n","import React from 'react';\nimport classes from './Slots.scss';\n\nconst Slots = () => (\n    <section className={classes.Slots}>\n        <div className={classes.Slot}>a</div>\n        <div className={classes.Slot}>t</div>\n        <div className={classes.Slot}>l</div>\n        <div className={classes.Slot}></div>\n        <div className={classes.Slot}></div>\n        <div className={classes.Slot}></div>\n        <div className={classes.Slot}></div>\n    </section>\n);\n\nexport { Slots };\n","import React from 'react';\nimport classNames from 'classnames';\nimport classes from './Letters.scss';\n\nconst Letters = () => {\n    const letterClasses = classNames(\n        classes.Letter,\n        classes.Inactive,\n    );\n\n    return (\n        <section className={classes.Letters}>\n            <div className={classes.LettersRow}>\n                <div className={letterClasses}>a</div>\n                <div className={classes.Letter}>s</div>\n            </div>\n            <div className={classes.LettersRow}>\n                <div className={letterClasses}>t</div>\n                <div className={classes.Letter}>r</div>\n                <div className={classes.Letter}>k</div>\n            </div>\n            <div className={classes.LettersRow}>\n                <div className={letterClasses}>l</div>\n                <div className={classes.Letter}>q</div>\n            </div>\n        </section>\n    );\n};\n\nexport {Letters};\n","import React from 'react';\nimport classes from './Game.scss';\n\nimport { Slots } from './Slots/Slots';\nimport { Letters } from './Letters/Letters';\n\nconst Game = () => (\n    <main className={classes.Game}>\n        <Slots />\n        <Letters />\n    </main>\n);\n\nexport { Game };\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { Header } from './components/Header/Header';\nimport { Home } from './components/Home/Home';\nimport { Game } from './components/Game/Game';\n\nfunction App() {\n    return (\n        <BrowserRouter basename=\"/scrabble-workout\">\n            <div>\n                <Header />\n\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/game\" component={Game}/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Letters\":\"Letters__Letters__2F_th\",\"LettersRow\":\"Letters__LettersRow__3HUjI\",\"Letter\":\"Letters__Letter__NSURe\",\"Inactive\":\"Letters__Inactive__1GPsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slots\":\"Slots__Slots__37-My\",\"Slot\":\"Slots__Slot__2KBwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home__Home__hMHTH\",\"Hero\":\"Home__Hero__1qk5I\",\"Header\":\"Home__Header__2z1F-\",\"StartGame\":\"Home__StartGame__39d5A\",\"StartGameAction\":\"Home__StartGameAction__3rSNF\"};"],"sourceRoot":""}